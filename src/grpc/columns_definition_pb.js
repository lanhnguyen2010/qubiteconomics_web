// source: columns_definition.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.columns_definition.Column', null, global);
goog.exportSymbol('proto.columns_definition.ColumnsDefinition', null, global);
goog.exportSymbol('proto.columns_definition.CreateColumnsDefinitionRequest', null, global);
goog.exportSymbol('proto.columns_definition.CreateColumnsDefinitionResponse', null, global);
goog.exportSymbol('proto.columns_definition.DeleteColumnsDefinitionRequest', null, global);
goog.exportSymbol('proto.columns_definition.GetColumnsDefinitionRequest', null, global);
goog.exportSymbol('proto.columns_definition.GetColumnsDefinitionResponse', null, global);
goog.exportSymbol('proto.columns_definition.ListColumnsDefinitionsRequest', null, global);
goog.exportSymbol('proto.columns_definition.ListColumnsDefinitionsResponse', null, global);
goog.exportSymbol('proto.columns_definition.UpdateColumnsDefinitionRequest', null, global);
goog.exportSymbol('proto.columns_definition.UpdateColumnsDefinitionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.Column.displayName = 'proto.columns_definition.Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.ColumnsDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.columns_definition.ColumnsDefinition.repeatedFields_, null);
};
goog.inherits(proto.columns_definition.ColumnsDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.ColumnsDefinition.displayName = 'proto.columns_definition.ColumnsDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.CreateColumnsDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.columns_definition.CreateColumnsDefinitionRequest.repeatedFields_, null);
};
goog.inherits(proto.columns_definition.CreateColumnsDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.CreateColumnsDefinitionRequest.displayName = 'proto.columns_definition.CreateColumnsDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.CreateColumnsDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.CreateColumnsDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.CreateColumnsDefinitionResponse.displayName = 'proto.columns_definition.CreateColumnsDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.GetColumnsDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.GetColumnsDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.GetColumnsDefinitionRequest.displayName = 'proto.columns_definition.GetColumnsDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.GetColumnsDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.GetColumnsDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.GetColumnsDefinitionResponse.displayName = 'proto.columns_definition.GetColumnsDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.UpdateColumnsDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.columns_definition.UpdateColumnsDefinitionRequest.repeatedFields_, null);
};
goog.inherits(proto.columns_definition.UpdateColumnsDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.UpdateColumnsDefinitionRequest.displayName = 'proto.columns_definition.UpdateColumnsDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.UpdateColumnsDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.UpdateColumnsDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.UpdateColumnsDefinitionResponse.displayName = 'proto.columns_definition.UpdateColumnsDefinitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.DeleteColumnsDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.DeleteColumnsDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.DeleteColumnsDefinitionRequest.displayName = 'proto.columns_definition.DeleteColumnsDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.ListColumnsDefinitionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.columns_definition.ListColumnsDefinitionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.ListColumnsDefinitionsRequest.displayName = 'proto.columns_definition.ListColumnsDefinitionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.columns_definition.ListColumnsDefinitionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.columns_definition.ListColumnsDefinitionsResponse.repeatedFields_, null);
};
goog.inherits(proto.columns_definition.ListColumnsDefinitionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.columns_definition.ListColumnsDefinitionsResponse.displayName = 'proto.columns_definition.ListColumnsDefinitionsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.Column.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.Column.toObject = function(includeInstance, msg) {
  var f, obj = {
columnName: jspb.Message.getFieldWithDefault(msg, 1, ""),
datatype: jspb.Message.getFieldWithDefault(msg, 2, ""),
position: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.Column}
 */
proto.columns_definition.Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.Column;
  return proto.columns_definition.Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.Column}
 */
proto.columns_definition.Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatatype(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatatype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string column_name = 1;
 * @return {string}
 */
proto.columns_definition.Column.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.Column} returns this
 */
proto.columns_definition.Column.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string datatype = 2;
 * @return {string}
 */
proto.columns_definition.Column.prototype.getDatatype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.Column} returns this
 */
proto.columns_definition.Column.prototype.setDatatype = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 position = 3;
 * @return {number}
 */
proto.columns_definition.Column.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.columns_definition.Column} returns this
 */
proto.columns_definition.Column.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.columns_definition.ColumnsDefinition.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.ColumnsDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.ColumnsDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.ColumnsDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ColumnsDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, ""),
tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.columns_definition.Column.toObject, includeInstance),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.ColumnsDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.ColumnsDefinition;
  return proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.ColumnsDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = new proto.columns_definition.Column;
      reader.readMessage(value,proto.columns_definition.Column.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.ColumnsDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.ColumnsDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.columns_definition.Column.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.columns_definition.ColumnsDefinition.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
 */
proto.columns_definition.ColumnsDefinition.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.columns_definition.ColumnsDefinition.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
 */
proto.columns_definition.ColumnsDefinition.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Column columns = 3;
 * @return {!Array<!proto.columns_definition.Column>}
 */
proto.columns_definition.ColumnsDefinition.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.columns_definition.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.columns_definition.Column, 3));
};


/**
 * @param {!Array<!proto.columns_definition.Column>} value
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
*/
proto.columns_definition.ColumnsDefinition.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.columns_definition.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.columns_definition.Column}
 */
proto.columns_definition.ColumnsDefinition.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.columns_definition.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
 */
proto.columns_definition.ColumnsDefinition.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * optional google.protobuf.Timestamp created_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.columns_definition.ColumnsDefinition.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
*/
proto.columns_definition.ColumnsDefinition.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
 */
proto.columns_definition.ColumnsDefinition.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.columns_definition.ColumnsDefinition.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 id = 5;
 * @return {number}
 */
proto.columns_definition.ColumnsDefinition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.columns_definition.ColumnsDefinition} returns this
 */
proto.columns_definition.ColumnsDefinition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.columns_definition.CreateColumnsDefinitionRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.CreateColumnsDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.CreateColumnsDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.CreateColumnsDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, ""),
tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.columns_definition.Column.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.CreateColumnsDefinitionRequest;
  return proto.columns_definition.CreateColumnsDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.CreateColumnsDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = new proto.columns_definition.Column;
      reader.readMessage(value,proto.columns_definition.Column.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.CreateColumnsDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.CreateColumnsDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.CreateColumnsDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.columns_definition.Column.serializeBinaryToWriter
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Column columns = 3;
 * @return {!Array<!proto.columns_definition.Column>}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.columns_definition.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.columns_definition.Column, 3));
};


/**
 * @param {!Array<!proto.columns_definition.Column>} value
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest} returns this
*/
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.columns_definition.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.columns_definition.Column}
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.columns_definition.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.columns_definition.CreateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.CreateColumnsDefinitionRequest.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.CreateColumnsDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.CreateColumnsDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.CreateColumnsDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
columnsDefinition: (f = msg.getColumnsDefinition()) && proto.columns_definition.ColumnsDefinition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.CreateColumnsDefinitionResponse}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.CreateColumnsDefinitionResponse;
  return proto.columns_definition.CreateColumnsDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.CreateColumnsDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.CreateColumnsDefinitionResponse}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.columns_definition.ColumnsDefinition;
      reader.readMessage(value,proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader);
      msg.setColumnsDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.CreateColumnsDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.CreateColumnsDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.CreateColumnsDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsDefinition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional ColumnsDefinition columns_definition = 1;
 * @return {?proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.getColumnsDefinition = function() {
  return /** @type{?proto.columns_definition.ColumnsDefinition} */ (
    jspb.Message.getWrapperField(this, proto.columns_definition.ColumnsDefinition, 1));
};


/**
 * @param {?proto.columns_definition.ColumnsDefinition|undefined} value
 * @return {!proto.columns_definition.CreateColumnsDefinitionResponse} returns this
*/
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.setColumnsDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.columns_definition.CreateColumnsDefinitionResponse} returns this
 */
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.clearColumnsDefinition = function() {
  return this.setColumnsDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.columns_definition.CreateColumnsDefinitionResponse.prototype.hasColumnsDefinition = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.GetColumnsDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.GetColumnsDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.GetColumnsDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, ""),
tableName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.GetColumnsDefinitionRequest}
 */
proto.columns_definition.GetColumnsDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.GetColumnsDefinitionRequest;
  return proto.columns_definition.GetColumnsDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.GetColumnsDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.GetColumnsDefinitionRequest}
 */
proto.columns_definition.GetColumnsDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.GetColumnsDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.GetColumnsDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.GetColumnsDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.GetColumnsDefinitionRequest} returns this
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.GetColumnsDefinitionRequest} returns this
 */
proto.columns_definition.GetColumnsDefinitionRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.GetColumnsDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.GetColumnsDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.GetColumnsDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.GetColumnsDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
columnsDefinition: (f = msg.getColumnsDefinition()) && proto.columns_definition.ColumnsDefinition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.GetColumnsDefinitionResponse}
 */
proto.columns_definition.GetColumnsDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.GetColumnsDefinitionResponse;
  return proto.columns_definition.GetColumnsDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.GetColumnsDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.GetColumnsDefinitionResponse}
 */
proto.columns_definition.GetColumnsDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.columns_definition.ColumnsDefinition;
      reader.readMessage(value,proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader);
      msg.setColumnsDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.GetColumnsDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.GetColumnsDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.GetColumnsDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.GetColumnsDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsDefinition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional ColumnsDefinition columns_definition = 1;
 * @return {?proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.GetColumnsDefinitionResponse.prototype.getColumnsDefinition = function() {
  return /** @type{?proto.columns_definition.ColumnsDefinition} */ (
    jspb.Message.getWrapperField(this, proto.columns_definition.ColumnsDefinition, 1));
};


/**
 * @param {?proto.columns_definition.ColumnsDefinition|undefined} value
 * @return {!proto.columns_definition.GetColumnsDefinitionResponse} returns this
*/
proto.columns_definition.GetColumnsDefinitionResponse.prototype.setColumnsDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.columns_definition.GetColumnsDefinitionResponse} returns this
 */
proto.columns_definition.GetColumnsDefinitionResponse.prototype.clearColumnsDefinition = function() {
  return this.setColumnsDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.columns_definition.GetColumnsDefinitionResponse.prototype.hasColumnsDefinition = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.UpdateColumnsDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.UpdateColumnsDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, ""),
tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.columns_definition.Column.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.UpdateColumnsDefinitionRequest;
  return proto.columns_definition.UpdateColumnsDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.UpdateColumnsDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = new proto.columns_definition.Column;
      reader.readMessage(value,proto.columns_definition.Column.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.UpdateColumnsDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.UpdateColumnsDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.columns_definition.Column.serializeBinaryToWriter
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Column columns = 3;
 * @return {!Array<!proto.columns_definition.Column>}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.columns_definition.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.columns_definition.Column, 3));
};


/**
 * @param {!Array<!proto.columns_definition.Column>} value
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest} returns this
*/
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.columns_definition.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.columns_definition.Column}
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.columns_definition.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionRequest} returns this
 */
proto.columns_definition.UpdateColumnsDefinitionRequest.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.UpdateColumnsDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.UpdateColumnsDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
columnsDefinition: (f = msg.getColumnsDefinition()) && proto.columns_definition.ColumnsDefinition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionResponse}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.UpdateColumnsDefinitionResponse;
  return proto.columns_definition.UpdateColumnsDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.UpdateColumnsDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionResponse}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.columns_definition.ColumnsDefinition;
      reader.readMessage(value,proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader);
      msg.setColumnsDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.UpdateColumnsDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.UpdateColumnsDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsDefinition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional ColumnsDefinition columns_definition = 1;
 * @return {?proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.getColumnsDefinition = function() {
  return /** @type{?proto.columns_definition.ColumnsDefinition} */ (
    jspb.Message.getWrapperField(this, proto.columns_definition.ColumnsDefinition, 1));
};


/**
 * @param {?proto.columns_definition.ColumnsDefinition|undefined} value
 * @return {!proto.columns_definition.UpdateColumnsDefinitionResponse} returns this
*/
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.setColumnsDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.columns_definition.UpdateColumnsDefinitionResponse} returns this
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.clearColumnsDefinition = function() {
  return this.setColumnsDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.columns_definition.UpdateColumnsDefinitionResponse.prototype.hasColumnsDefinition = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.DeleteColumnsDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.DeleteColumnsDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
source: jspb.Message.getFieldWithDefault(msg, 1, ""),
tableName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.DeleteColumnsDefinitionRequest}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.DeleteColumnsDefinitionRequest;
  return proto.columns_definition.DeleteColumnsDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.DeleteColumnsDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.DeleteColumnsDefinitionRequest}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.DeleteColumnsDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.DeleteColumnsDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.DeleteColumnsDefinitionRequest} returns this
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.columns_definition.DeleteColumnsDefinitionRequest} returns this
 */
proto.columns_definition.DeleteColumnsDefinitionRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.ListColumnsDefinitionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.ListColumnsDefinitionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.ListColumnsDefinitionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ListColumnsDefinitionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.ListColumnsDefinitionsRequest}
 */
proto.columns_definition.ListColumnsDefinitionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.ListColumnsDefinitionsRequest;
  return proto.columns_definition.ListColumnsDefinitionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.ListColumnsDefinitionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.ListColumnsDefinitionsRequest}
 */
proto.columns_definition.ListColumnsDefinitionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.ListColumnsDefinitionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.ListColumnsDefinitionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.ListColumnsDefinitionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ListColumnsDefinitionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.columns_definition.ListColumnsDefinitionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.columns_definition.ListColumnsDefinitionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.columns_definition.ListColumnsDefinitionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ListColumnsDefinitionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
columnsDefinitionsList: jspb.Message.toObjectList(msg.getColumnsDefinitionsList(),
    proto.columns_definition.ColumnsDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.columns_definition.ListColumnsDefinitionsResponse}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.columns_definition.ListColumnsDefinitionsResponse;
  return proto.columns_definition.ListColumnsDefinitionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.columns_definition.ListColumnsDefinitionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.columns_definition.ListColumnsDefinitionsResponse}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.columns_definition.ColumnsDefinition;
      reader.readMessage(value,proto.columns_definition.ColumnsDefinition.deserializeBinaryFromReader);
      msg.addColumnsDefinitions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.columns_definition.ListColumnsDefinitionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.columns_definition.ListColumnsDefinitionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.columns_definition.ListColumnsDefinitionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsDefinitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.columns_definition.ColumnsDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ColumnsDefinition columns_definitions = 1;
 * @return {!Array<!proto.columns_definition.ColumnsDefinition>}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.getColumnsDefinitionsList = function() {
  return /** @type{!Array<!proto.columns_definition.ColumnsDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.columns_definition.ColumnsDefinition, 1));
};


/**
 * @param {!Array<!proto.columns_definition.ColumnsDefinition>} value
 * @return {!proto.columns_definition.ListColumnsDefinitionsResponse} returns this
*/
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.setColumnsDefinitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.columns_definition.ColumnsDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.columns_definition.ColumnsDefinition}
 */
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.addColumnsDefinitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.columns_definition.ColumnsDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.columns_definition.ListColumnsDefinitionsResponse} returns this
 */
proto.columns_definition.ListColumnsDefinitionsResponse.prototype.clearColumnsDefinitionsList = function() {
  return this.setColumnsDefinitionsList([]);
};


goog.object.extend(exports, proto.columns_definition);
