// source: chart.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.chart_data.FBFSDataPoint', null, global);
goog.exportSymbol('proto.chart_data.FBFSRequest', null, global);
goog.exportSymbol('proto.chart_data.FBFSResponse', null, global);
goog.exportSymbol('proto.chart_data.VN30PSDataPoint', null, global);
goog.exportSymbol('proto.chart_data.VN30PSRequest', null, global);
goog.exportSymbol('proto.chart_data.VN30PSResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.VN30PSRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chart_data.VN30PSRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.VN30PSRequest.displayName = 'proto.chart_data.VN30PSRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.VN30PSDataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chart_data.VN30PSDataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.VN30PSDataPoint.displayName = 'proto.chart_data.VN30PSDataPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.VN30PSResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chart_data.VN30PSResponse.repeatedFields_, null);
};
goog.inherits(proto.chart_data.VN30PSResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.VN30PSResponse.displayName = 'proto.chart_data.VN30PSResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.FBFSRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chart_data.FBFSRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.FBFSRequest.displayName = 'proto.chart_data.FBFSRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.FBFSDataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chart_data.FBFSDataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.FBFSDataPoint.displayName = 'proto.chart_data.FBFSDataPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chart_data.FBFSResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chart_data.FBFSResponse.repeatedFields_, null);
};
goog.inherits(proto.chart_data.FBFSResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chart_data.FBFSResponse.displayName = 'proto.chart_data.FBFSResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.VN30PSRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.VN30PSRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.VN30PSRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.VN30PSRequest}
 */
proto.chart_data.VN30PSRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.VN30PSRequest;
  return proto.chart_data.VN30PSRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.VN30PSRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.VN30PSRequest}
 */
proto.chart_data.VN30PSRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.VN30PSRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.VN30PSRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.VN30PSRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.VN30PSRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.VN30PSRequest} returns this
*/
proto.chart_data.VN30PSRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.VN30PSRequest} returns this
 */
proto.chart_data.VN30PSRequest.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.VN30PSRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.VN30PSRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.VN30PSRequest} returns this
*/
proto.chart_data.VN30PSRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.VN30PSRequest} returns this
 */
proto.chart_data.VN30PSRequest.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.VN30PSRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.VN30PSDataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.VN30PSDataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.VN30PSDataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSDataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
smoothedLast: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.VN30PSDataPoint}
 */
proto.chart_data.VN30PSDataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.VN30PSDataPoint;
  return proto.chart_data.VN30PSDataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.VN30PSDataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.VN30PSDataPoint}
 */
proto.chart_data.VN30PSDataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSmoothedLast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.VN30PSDataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.VN30PSDataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.VN30PSDataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSDataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSmoothedLast();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.VN30PSDataPoint.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.VN30PSDataPoint} returns this
*/
proto.chart_data.VN30PSDataPoint.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.VN30PSDataPoint} returns this
 */
proto.chart_data.VN30PSDataPoint.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.VN30PSDataPoint.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double smoothed_last = 2;
 * @return {number}
 */
proto.chart_data.VN30PSDataPoint.prototype.getSmoothedLast = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.chart_data.VN30PSDataPoint} returns this
 */
proto.chart_data.VN30PSDataPoint.prototype.setSmoothedLast = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chart_data.VN30PSResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.VN30PSResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.VN30PSResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.VN30PSResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
vn30List: jspb.Message.toObjectList(msg.getVn30List(),
    proto.chart_data.VN30PSDataPoint.toObject, includeInstance),
psList: jspb.Message.toObjectList(msg.getPsList(),
    proto.chart_data.VN30PSDataPoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.VN30PSResponse}
 */
proto.chart_data.VN30PSResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.VN30PSResponse;
  return proto.chart_data.VN30PSResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.VN30PSResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.VN30PSResponse}
 */
proto.chart_data.VN30PSResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chart_data.VN30PSDataPoint;
      reader.readMessage(value,proto.chart_data.VN30PSDataPoint.deserializeBinaryFromReader);
      msg.addVn30(value);
      break;
    case 2:
      var value = new proto.chart_data.VN30PSDataPoint;
      reader.readMessage(value,proto.chart_data.VN30PSDataPoint.deserializeBinaryFromReader);
      msg.addPs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.VN30PSResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.VN30PSResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.VN30PSResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.VN30PSResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVn30List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chart_data.VN30PSDataPoint.serializeBinaryToWriter
    );
  }
  f = message.getPsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.chart_data.VN30PSDataPoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VN30PSDataPoint vn30 = 1;
 * @return {!Array<!proto.chart_data.VN30PSDataPoint>}
 */
proto.chart_data.VN30PSResponse.prototype.getVn30List = function() {
  return /** @type{!Array<!proto.chart_data.VN30PSDataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chart_data.VN30PSDataPoint, 1));
};


/**
 * @param {!Array<!proto.chart_data.VN30PSDataPoint>} value
 * @return {!proto.chart_data.VN30PSResponse} returns this
*/
proto.chart_data.VN30PSResponse.prototype.setVn30List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chart_data.VN30PSDataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chart_data.VN30PSDataPoint}
 */
proto.chart_data.VN30PSResponse.prototype.addVn30 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chart_data.VN30PSDataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chart_data.VN30PSResponse} returns this
 */
proto.chart_data.VN30PSResponse.prototype.clearVn30List = function() {
  return this.setVn30List([]);
};


/**
 * repeated VN30PSDataPoint ps = 2;
 * @return {!Array<!proto.chart_data.VN30PSDataPoint>}
 */
proto.chart_data.VN30PSResponse.prototype.getPsList = function() {
  return /** @type{!Array<!proto.chart_data.VN30PSDataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chart_data.VN30PSDataPoint, 2));
};


/**
 * @param {!Array<!proto.chart_data.VN30PSDataPoint>} value
 * @return {!proto.chart_data.VN30PSResponse} returns this
*/
proto.chart_data.VN30PSResponse.prototype.setPsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.chart_data.VN30PSDataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chart_data.VN30PSDataPoint}
 */
proto.chart_data.VN30PSResponse.prototype.addPs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.chart_data.VN30PSDataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chart_data.VN30PSResponse} returns this
 */
proto.chart_data.VN30PSResponse.prototype.clearPsList = function() {
  return this.setPsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.FBFSRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.FBFSRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.FBFSRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.FBFSRequest}
 */
proto.chart_data.FBFSRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.FBFSRequest;
  return proto.chart_data.FBFSRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.FBFSRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.FBFSRequest}
 */
proto.chart_data.FBFSRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.FBFSRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.FBFSRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.FBFSRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.FBFSRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.FBFSRequest} returns this
*/
proto.chart_data.FBFSRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.FBFSRequest} returns this
 */
proto.chart_data.FBFSRequest.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.FBFSRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.FBFSRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.FBFSRequest} returns this
*/
proto.chart_data.FBFSRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.FBFSRequest} returns this
 */
proto.chart_data.FBFSRequest.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.FBFSRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.FBFSDataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.FBFSDataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.FBFSDataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSDataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
volume: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.FBFSDataPoint}
 */
proto.chart_data.FBFSDataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.FBFSDataPoint;
  return proto.chart_data.FBFSDataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.FBFSDataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.FBFSDataPoint}
 */
proto.chart_data.FBFSDataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.FBFSDataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.FBFSDataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.FBFSDataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSDataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.chart_data.FBFSDataPoint.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.chart_data.FBFSDataPoint} returns this
*/
proto.chart_data.FBFSDataPoint.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chart_data.FBFSDataPoint} returns this
 */
proto.chart_data.FBFSDataPoint.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chart_data.FBFSDataPoint.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 volume = 2;
 * @return {number}
 */
proto.chart_data.FBFSDataPoint.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.chart_data.FBFSDataPoint} returns this
 */
proto.chart_data.FBFSDataPoint.prototype.setVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chart_data.FBFSResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chart_data.FBFSResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.chart_data.FBFSResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chart_data.FBFSResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
fbList: jspb.Message.toObjectList(msg.getFbList(),
    proto.chart_data.FBFSDataPoint.toObject, includeInstance),
fsList: jspb.Message.toObjectList(msg.getFsList(),
    proto.chart_data.FBFSDataPoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chart_data.FBFSResponse}
 */
proto.chart_data.FBFSResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chart_data.FBFSResponse;
  return proto.chart_data.FBFSResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chart_data.FBFSResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chart_data.FBFSResponse}
 */
proto.chart_data.FBFSResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chart_data.FBFSDataPoint;
      reader.readMessage(value,proto.chart_data.FBFSDataPoint.deserializeBinaryFromReader);
      msg.addFb(value);
      break;
    case 2:
      var value = new proto.chart_data.FBFSDataPoint;
      reader.readMessage(value,proto.chart_data.FBFSDataPoint.deserializeBinaryFromReader);
      msg.addFs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chart_data.FBFSResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chart_data.FBFSResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chart_data.FBFSResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chart_data.FBFSResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFbList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chart_data.FBFSDataPoint.serializeBinaryToWriter
    );
  }
  f = message.getFsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.chart_data.FBFSDataPoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FBFSDataPoint fb = 1;
 * @return {!Array<!proto.chart_data.FBFSDataPoint>}
 */
proto.chart_data.FBFSResponse.prototype.getFbList = function() {
  return /** @type{!Array<!proto.chart_data.FBFSDataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chart_data.FBFSDataPoint, 1));
};


/**
 * @param {!Array<!proto.chart_data.FBFSDataPoint>} value
 * @return {!proto.chart_data.FBFSResponse} returns this
*/
proto.chart_data.FBFSResponse.prototype.setFbList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chart_data.FBFSDataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chart_data.FBFSDataPoint}
 */
proto.chart_data.FBFSResponse.prototype.addFb = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chart_data.FBFSDataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chart_data.FBFSResponse} returns this
 */
proto.chart_data.FBFSResponse.prototype.clearFbList = function() {
  return this.setFbList([]);
};


/**
 * repeated FBFSDataPoint fs = 2;
 * @return {!Array<!proto.chart_data.FBFSDataPoint>}
 */
proto.chart_data.FBFSResponse.prototype.getFsList = function() {
  return /** @type{!Array<!proto.chart_data.FBFSDataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chart_data.FBFSDataPoint, 2));
};


/**
 * @param {!Array<!proto.chart_data.FBFSDataPoint>} value
 * @return {!proto.chart_data.FBFSResponse} returns this
*/
proto.chart_data.FBFSResponse.prototype.setFsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.chart_data.FBFSDataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chart_data.FBFSDataPoint}
 */
proto.chart_data.FBFSResponse.prototype.addFs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.chart_data.FBFSDataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chart_data.FBFSResponse} returns this
 */
proto.chart_data.FBFSResponse.prototype.clearFsList = function() {
  return this.setFsList([]);
};


goog.object.extend(exports, proto.chart_data);
